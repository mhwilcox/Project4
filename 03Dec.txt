[==========] Running 7 tests from 5 test cases.
[----------] Global test environment set-up.
[----------] 1 test from HashFunctionTest
[ RUN      ] HashFunctionTest.Hf1
[       OK ] HashFunctionTest.Hf1 (0 ms)
[----------] 1 test from HashFunctionTest (1 ms total)

[----------] 1 test from TableTest
[ RUN      ] TableTest.Tab1
[       OK ] TableTest.Tab1 (0 ms)
[----------] 1 test from TableTest (0 ms total)

[----------] 2 tests from ResizeTest
[ RUN      ] ResizeTest.Tab2
[       OK ] ResizeTest.Tab2 (0 ms)
[ RUN      ] ResizeTest.Tab3
[       OK ] ResizeTest.Tab3 (0 ms)
[----------] 2 tests from ResizeTest (0 ms total)

[----------] 1 test from SampleTest
[ RUN      ] SampleTest.Abandoning
[       OK ] SampleTest.Abandoning (0 ms)
[----------] 1 test from SampleTest (0 ms total)

[----------] 2 tests from ConvertWords
[ RUN      ] ConvertWords.AntToArt
size of adjChar: 0
size of path: 1
side of stk: 0
solution at beginning of convert:: 
s1: ant s2: art
s1: ant and s2: art share a char at: 2

    char doesn't match at: 1 pushing to adjChar. 
s1: ant and s2: art share a char at: 0

char that is being adjusted: 1
just before for loop: ant
	************* doesn't match char to s2 : act
	************* doesn't match char to s2 : aft
word alreay in path:  ant
   **********   
   ******   

	************* doesn't match char to s2 : apt

THIS IS CORRECT!!!! wtemp: art
&&&  this is path.at wtemp: ant
adjChar size: 1,  after adjChar size: 0
before val: act, curr val: aft
path size: 3
   ********   
  8888888   
 ******* 


adding to solution: art
stk size: 0

**********-------------************: ant --> art
clearing map, queue, & stack.

[       OK ] ConvertWords.AntToArt (85 ms)
[ RUN      ] ConvertWords.AntToEat
size of adjChar: 0
size of path: 1
side of stk: 0
solution at beginning of convert:: 
s1: ant s2: eat
s1: ant and s2: eat share a char at: 2

    char doesn't match at: 1 pushing to adjChar. 

    char doesn't match at: 0 pushing to adjChar. 

char that is being adjusted: 1
just before for loop: ant
	************* doesn't match char to s2 : act
	************* doesn't match char to s2 : aft
word alreay in path:  ant
   **********   
   ******   

	************* doesn't match char to s2 : apt
	************* doesn't match char to s2 : art
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: ant, curr val: act
path size: 2
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: azt
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: act, curr val: aft
path size: 3
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: zzt
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: aft, curr val: apt
path size: 4
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: zzt
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: apt, curr val: art
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: zzt
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
