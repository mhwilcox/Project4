second words test. 
size of adjChar: 0
size of path: 1
side of stk: 0
solution at beginning of convert:: 
s1: ant s2: eat
s1: ant and s2: eat share a char at: 2

    char doesn't match at: 1 pushing to adjChar. 

    char doesn't match at: 0 pushing to adjChar. 

char that is being adjusted: 1
just before for loop: ant
	************* doesn't match char to s2 : act
	************* doesn't match char to s2 : aft
word alreay in path:  ant
   **********   
   ******   

	************* doesn't match char to s2 : apt
	************* doesn't match char to s2 : art
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: ant, curr val: act
path size: 2
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: act
word alreay in path:  act
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: act, curr val: aft
path size: 3
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: aft
word alreay in path:  act
   **********   
   ******   

word alreay in path:  aft
   **********   
   ******   

word alreay in path:  ant
   **********   
   ******   

	************* doesn't match char to s2 : apt
	************* doesn't match char to s2 : art
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: aft, curr val: apt
path size: 4
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: apt
word alreay in path:  apt
   **********   
   ******   

	************* doesn't match char to s2 : opt
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: apt, curr val: art
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: art
word alreay in path:  act
   **********   
   ******   

word alreay in path:  aft
   **********   
   ******   

word alreay in path:  ant
   **********   
   ******   

word alreay in path:  apt
   **********   
   ******   

word alreay in path:  art
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: art, curr val: ant
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: ant
word alreay in path:  ant
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: ant, curr val: act
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: act
word alreay in path:  act
   **********   
   ******   

word alreay in path:  aft
   **********   
   ******   

word alreay in path:  ant
   **********   
   ******   

word alreay in path:  apt
   **********   
   ******   

word alreay in path:  art
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: act, curr val: apt
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: apt
word alreay in path:  apt
   **********   
   ******   

	************* doesn't match char to s2 : opt
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: apt, curr val: art
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: art
word alreay in path:  act
   **********   
   ******   

word alreay in path:  aft
   **********   
   ******   

word alreay in path:  ant
   **********   
   ******   

word alreay in path:  apt
   **********   
   ******   

word alreay in path:  art
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: art, curr val: aft
path size: 5
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: aft
word alreay in path:  aft
   **********   
   ******   

	************* doesn't match char to s2 : oft
w==25 and no match to s2.
adjChar size: 3,  after adjChar size: 2
before val: aft, curr val: opt
path size: 6
   ********   
  8888888   
 ******* 



char that is being adjusted: 1
just before for loop: opt
wtemp = oat	||  This is if chars match from current word to s2.
	this is path.at wtemp: opt
adjChar size: 2,  after adjChar size: 1
before val: opt, curr val: apt
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: apt
word alreay in path:  apt
   **********   
   ******   

word alreay in path:  opt
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: apt, curr val: art
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: art
word alreay in path:  art
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: art, curr val: ant
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: ant
word alreay in path:  ant
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: ant, curr val: act
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: act
word alreay in path:  act
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: act, curr val: opt
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: opt
word alreay in path:  apt
   **********   
   ******   

word alreay in path:  opt
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: opt, curr val: apt
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: apt
word alreay in path:  apt
   **********   
   ******   

word alreay in path:  opt
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: apt, curr val: art
path size: 7
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: art
word alreay in path:  art
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: art, curr val: oft
path size: 8
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: oft
word alreay in path:  aft
   **********   
   ******   

word alreay in path:  oft
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: oft, curr val: aft
path size: 8
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: aft
word alreay in path:  aft
   **********   
   ******   

word alreay in path:  oft
   **********   
   ******   

w==25 and no match to s2.
adjChar size: 2,  after adjChar size: 1
before val: aft, curr val: oat
path size: 8
   ********   
  8888888   
 ******* 



char that is being adjusted: 0
just before for loop: oat
	************* doesn't match char to s2 : bat
	************* doesn't match char to s2 : cat

THIS IS CORRECT!!!! wtemp: eat
&&&  this is path.at wtemp: oat
path value: oat
path value: opt
path value: aft
path value: act
adding to solution: act
adding to solution: aft
adding to solution: opt
adding to solution: oat
adding to solution: eat
stk size: 0

**********-------------************: ant --> act --> aft --> opt --> oat --> eat
clearing map, queue, & stack.

return of 'ant to eat': ant --> act --> aft --> opt --> oat --> eat
